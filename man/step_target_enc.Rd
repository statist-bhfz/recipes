% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/target_encoder.R
\name{step_target_enc}
\alias{step_target_enc}
\title{Categorical variables encoding using target statistics}
\usage{
step_target_enc(recipe, ..., role = "predictor", trained = FALSE,
  skip = FALSE, id = rand_id("mean_target_enc"), fun = mean,
  prefix = "mean", target_var = NULL, lookup_table = NULL)
}
\arguments{
\item{...}{One or more selector functions to choose which
variables will be used for target encoding (including target itself). See
\code{\link[=selections]{selections()}} for more details. For the \code{tidy}
method, these are not currently used.}

\item{role}{For model terms created by this step, what analysis
role should they be assigned?. By default, the function assumes
that the new encoded versions of categorical variables created by the
original variables will be used as predictors in a model.}

\item{fun}{Function (mean, median, etc.) used to encode categorical variables.}

\item{prefix}{A character string that will be the prefix to the
resulting new variables.}

\item{target_var}{A character string with name of the target variable.}

\item{lookup_table}{Table with levels of the categorical variables and
corresponding mean/median target values.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} (the
selectors or variables selected), \code{value} (the
loading), and \code{component}.
}
\description{
\code{step_target_enc} creates a \emph{specification} of a
recipe step that will transform nominal data into its numerical
transformation based on mean or median target statistic.
}
\details{
On a par with mean or median function you can use custom functions to
compute modal value, trimmed mean and so on.
}
\examples{
dt_train <- as_tibble(mtcars)
cols <- c("gear", "carb")
target <- "vs"
rec_obj <-
  recipe(vs ~ ., data = dt_train) \%>\%
  step_target_enc(tidyselect::one_of(cols),
                  all_outcomes(),
                  fun = mean,
                  prefix = "mean",
                  target_var = "vs") \%>\%
  prep(training = dt_train)
bake(rec_obj, dt_train)
}
\concept{preprocessing}
\concept{target encoding for categorical variables}
\keyword{datagen}
